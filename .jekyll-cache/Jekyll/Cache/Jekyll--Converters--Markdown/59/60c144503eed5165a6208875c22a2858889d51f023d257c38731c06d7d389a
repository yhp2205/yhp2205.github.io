I"(<p>이 글은 Kaggle의 Google AI4Code 대회의 <a href="https://www.kaggle.com/code/andreaspalmgren/ai4code-comprehensive-eda">AI4Code - Comprehensive EDA</a>를 리뷰하기 위해 작성되었습니다.</p>

<h3 id="data-전처리-과정">data 전처리 과정</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">read_notebook</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
    <span class="k">return</span> <span class="p">(</span>
        <span class="n">pd</span><span class="p">.</span><span class="n">read_json</span><span class="p">(</span>
            <span class="n">path</span><span class="p">,</span>
            <span class="n">dtype</span><span class="o">=</span><span class="p">{</span><span class="s">'cell_type'</span><span class="p">:</span> <span class="s">'category'</span><span class="p">,</span> <span class="s">'source'</span><span class="p">:</span> <span class="s">'str'</span><span class="p">})</span>
        <span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="n">path</span><span class="p">.</span><span class="n">stem</span><span class="p">)</span>
        <span class="p">.</span><span class="n">rename_axis</span><span class="p">(</span><span class="s">'cell_id'</span><span class="p">)</span>
    <span class="p">)</span>

<span class="c1"># Subset of training due to its large size
</span><span class="n">NUM_TRAIN</span> <span class="o">=</span> <span class="mi">20000</span>
<span class="n">paths_train</span> <span class="o">=</span> <span class="nb">list</span><span class="p">((</span><span class="n">data_dir</span> <span class="o">/</span> <span class="s">'train'</span><span class="p">).</span><span class="n">glob</span><span class="p">(</span><span class="s">'*.json'</span><span class="p">))[:</span><span class="n">NUM_TRAIN</span><span class="p">]</span>
<span class="c1">#paths_train = list((data_dir / 'train').glob('*.json'))
</span>
<span class="n">notebooks_train</span> <span class="o">=</span> <span class="p">[</span><span class="n">read_notebook</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="k">for</span> <span class="n">path</span> <span class="ow">in</span> <span class="n">tqdm</span><span class="p">(</span><span class="n">paths_train</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="s">'Train NBs'</span><span class="p">)]</span>

<span class="c1"># Get notebooks
</span><span class="n">df_notebooks</span> <span class="o">=</span> <span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">(</span><span class="n">notebooks_train</span><span class="p">).</span><span class="n">set_index</span><span class="p">(</span><span class="s">'id'</span><span class="p">,</span> <span class="n">append</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">swaplevel</span><span class="p">().</span><span class="n">sort_index</span><span class="p">(</span><span class="n">level</span><span class="o">=</span><span class="s">'id'</span><span class="p">,</span> 
                                                                                               <span class="n">sort_remaining</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span> 

<span class="c1"># Get correct order of cells in notebooks                                                                                          
</span><span class="n">df_orders</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">data_dir</span><span class="o">/</span><span class="s">'train_orders.csv'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="s">'id'</span><span class="p">)</span>
<span class="n">df_orders</span> <span class="o">=</span> <span class="n">df_orders</span><span class="p">.</span><span class="n">squeeze</span><span class="p">().</span><span class="nb">str</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">).</span><span class="n">explode</span><span class="p">().</span><span class="n">to_frame</span><span class="p">()</span>
<span class="n">df_orders</span><span class="p">[</span><span class="s">"rank"</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df_orders</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">"id"</span><span class="p">).</span><span class="n">count</span><span class="p">()[</span><span class="s">"cell_order"</span><span class="p">]]).</span><span class="n">explode</span><span class="p">().</span><span class="n">to_numpy</span><span class="p">()</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">df_notebooks</span><span class="p">.</span><span class="n">reset_index</span><span class="p">().</span><span class="n">merge</span><span class="p">(</span><span class="n">df_orders</span><span class="p">.</span><span class="n">reset_index</span><span class="p">().</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">{</span><span class="s">'cell_order'</span><span class="p">:</span><span class="s">'cell_id'</span><span class="p">}),</span> 
                       <span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s">'id'</span><span class="p">,</span><span class="s">'cell_id'</span><span class="p">])</span>

<span class="c1"># Get ancestors for notebooks
</span><span class="n">df_ancestors</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">data_dir</span> <span class="o">/</span> <span class="s">'train_ancestors.csv'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span><span class="s">'id'</span><span class="p">)</span>

<span class="c1"># Final combined dataframe
</span><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df_ancestors</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">"id"</span><span class="p">).</span><span class="n">sort_values</span><span class="p">([</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"rank"</span><span class="p">]).</span><span class="n">set_index</span><span class="p">([</span><span class="s">"id"</span><span class="p">,</span> <span class="s">"cell_id"</span><span class="p">])</span>


<span class="c1"># Dataframe for count information - Used in EDA
</span><span class="n">mkd</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"cell_type"</span><span class="p">]</span> <span class="o">==</span> <span class="s">"markdown"</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">"id"</span><span class="p">]).</span><span class="n">count</span><span class="p">().</span><span class="n">source</span>
<span class="n">code</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">"cell_type"</span><span class="p">]</span> <span class="o">==</span> <span class="s">"code"</span><span class="p">].</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">"id"</span><span class="p">]).</span><span class="n">count</span><span class="p">().</span><span class="n">source</span>
<span class="n">df_counts</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">mkd</span><span class="p">,</span> <span class="n">code</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">df_counts</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'markdown_count'</span><span class="p">,</span> <span class="s">'code_count'</span><span class="p">]</span>
<span class="n">df_counts</span><span class="p">[</span><span class="s">"tot"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_counts</span><span class="p">.</span><span class="n">markdown_count</span><span class="o">+</span><span class="n">df_counts</span><span class="p">.</span><span class="n">code_count</span>
<span class="n">df_counts</span><span class="p">[</span><span class="s">"ratio"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_counts</span><span class="p">.</span><span class="n">code_count</span> <span class="o">/</span> <span class="n">df_counts</span><span class="p">.</span><span class="n">tot</span>
</code></pre></div></div>
<p>전체적인 데이터의 형태를 파악하기 위해 다음과 같은 코드를 사용하여 변수를 추가했습니다. 변수에 대한 설명은 다음과 같습니다.<br />
<img src="https://github.com/yhp2205/yhp2205.github.io/blob/main/assets/images/AIEDA/1-1.png?raw=true" alt="1-1" /></p>

:ET